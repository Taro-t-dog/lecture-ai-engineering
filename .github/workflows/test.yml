name: ML Pipeline CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest great_expectations pandas scikit-learn flake8 black mypy pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        flake8 day5/演習3 --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 day5/演習3 --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        
    - name: Format check with black
      run: |
        black --check day5/演習3
        
    - name: Run data tests
      run: |
        pytest day5/演習3/tests/test_data.py -v
        
    - name: Run model tests
      run: |
        pytest day5/演習3/tests/test_model.py -v
        
    # 宿題要件: モデルの推論精度と推論時間の検証
    - name: Run model performance tests
      run: |
        pytest day5/演習3/tests/test_model.py::test_model_accuracy -v
        pytest day5/演習3/tests/test_model.py::test_inference_time -v
        
    # 宿題要件: 過去バージョンとの比較テスト
    - name: Run regression tests
      run: |
        pytest day5/演習3/tests/test_model.py::test_model_regression -v
        
    - name: Generate test coverage report
      run: |
        pytest day5/演習3/tests/ --cov=day5/演習3 --cov-report=xml
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          coverage.xml